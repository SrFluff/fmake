#!/bin/python3

ver = "1.2.0"

from sys import argv
import os

cc = "gcc"
out = "main"
src = "main.c"
msg = True
say = "Compiling done!"
run = False

if os.path.exists("make.fmake"):
    f = open("make.fmake", "r")
    doc = []
    for line in f:
        doc.append(line[0:len(line)-1])
    i = 0
    while i < len(doc):
        if len(doc[i].split()) != 0:
            if doc[i].split()[0] == "cc":
                if doc[i].split()[1] == "$":
                    cc = "gcc"
                elif doc[i].split()[1] == "=":
                    cc = doc[i].split()[2]
            elif doc[i].split()[0] == "out":
                if doc[i].split()[1] == "$":
                    out = "main"
                elif doc[i].split()[1] == "=":
                    out = doc[i].split()[2]
            elif doc[i].split()[0] == "src":
                if doc[i].split()[1] == "$":
                    src = "main.c"
                elif doc[i].split()[1] == "=":
                    src = doc[i].split()[2]
            elif doc[i].split()[0] == "msg":
                if doc[i].split()[1] == "$":
                    msg = True
                elif doc[i].split()[1] == "=":
                    if doc[i].split()[2] == "true":
                        msg = True
                    elif doc[i].split()[2] == "false":
                        msg = False
            elif doc[i].split()[0] == "run":
                if doc[i].split()[1] == "$":
                    run = False
                elif doc[i].split()[1] == "=":
                    if doc[i].split()[2] == "false":
                        run = False
                    elif doc[i].split()[2] == "true":
                        run = True

            elif doc[i].split()[0] == "say":
                if doc[i].split()[1] == "$":
                    say = "Compiling done!"
                elif doc[i].split()[1] == "=":
                    say = doc[i][6:len(doc[i])]
            else:
                pass
        i += 1
argv.pop(0)

if len(argv) == 0:
    if not os.path.exists("make.fmake"):
        print("[ERROR]: No make.fmake file found.")
    else:
        os.system(f"{cc} {src} -o {out}")
        if msg:
            print(say)
        if run:
            os.system(f"./{out}")
else:
    if len(argv) == 1:
        if argv[0] == "--help" or argv[0] == "-h" or argv[0] == "-?":
            print("Usage: fmake [option]\n")
            
            print("Options:")
            print("example - Generates an example make.fmake file")
            print("project - Creates a src/ and build/ directory, along with a make.fmake file")
            print("debug   - Shows all variables (CC,SRC,OUT,MSG,SAY)")
            print("clean   - Removes any executable files declared in make.fmake")
            print("version - Return the current fmake version")
        elif argv[0] == "version" or argv[0] == "-version" or argv[0] == "-v":
            print(ver)
        elif argv[0] == "debug":
            print(f"CC: {cc}\nSRC:{src}\nOUT:{out}\nMSG:{msg}\nSAY:{say}\nRUN:{run}")
        elif argv[0] == "clean":
            if os.path.exists("make.fmake"):
                os.remove(out)
            else:
                print("[ERROR]: No make.fmake file, cannot determine executable")
        elif argv[0] == "example":
            if os.path.exists("make.fmake"):
                a = input("Override current make.fmake?[Y/N] ")
                if a.lower() == "n":
                    exit()
                os.remove("make.fmake")
                f = open("make.fmake","a")
                f.write("# Example fmake file\n")
                f.write("\n")
                f.write("cc = gcc\n")
                f.write("\n")
                f.write("# A $ means it's using the default value\n")
                f.write("src $\n")
                f.write("out = main\n")
                f.write("msg = true\n")
                f.write("say $\n")
                f.write("run = false\n")
                f.close()
                print("Done!")
        elif argv[0] == "project":
            os.system("mkdir src/;mkdir build/;touch src/main.c")
            f = open("src/main.c","a")
            f.write("#include <stdio.h>\n")
            f.write("\n")
            f.write("int main(void) {")
            f.write("\n")
            f.write("    return 0;\n")
            f.write("}\n")
            if not os.path.exists("make.fmake"):
                f = open("make.fmake","a")
                f.write("cc $\n")
                f.write("src = src/main.c\n")
                f.write("out = build/main\n")
                f.write("msg $\n")
                f.write("say $\n")
                f.write("run = false\n")
                f.close()
